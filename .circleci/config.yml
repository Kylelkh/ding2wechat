---
version: 2.1

executors:
  # Whenever the Go version is updated here, .travis.yml and .promu.yml
  # should also be updated.
  golang:
    docker:
      - image: circleci/golang:1.12
    parameters:
      working_dir:
        type: string
        default: ~/project
    working_directory: << parameters.working_dir >>

jobs:
  test:
    executor: golang

    steps:
      - checkout
      - run: make promu
      - run: make
      - run: git diff --exit-code
      - store_artifacts:
          path: ding2wechat
          destination: /build/ding2wechat
      - run: rm -v ding2wechat

  build:
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/timonwong/ding2wechat

    steps:
      - checkout
      - run: make promu
      - run: promu crossbuild -v
      - persist_to_workspace:
          root: .
          paths:
            - .build
      - store_artifacts:
          path: .build
          destination: /build

  docker_hub_master:
    executor: golang

    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: ln -s .build/linux-amd64/ding2wechat ding2wechat
      - run: make docker
      - run: make docker DOCKER_REPO=quay.io/timonwong
      - run: docker images
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
      - run: make docker-publish
      - run: make docker-publish DOCKER_REPO=quay.io/timonwong
      - run: make docker-manifest
      - run: make docker-manifest DOCKER_REPO=quay.io/timonwong

  docker_hub_release_tags:
    executor: golang

    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: make promu
      - run: promu crossbuild tarballs
      - run: promu checksum .tarballs
      - run: promu release .tarballs
      - store_artifacts:
          path: .tarballs
          destination: releases
      - run: ln -s .build/linux-amd64/ding2wechat ding2wechat
      - run: make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG
      - run: make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG DOCKER_REPO=quay.io/timonwong
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
      - run: make docker-publish DOCKER_IMAGE_TAG="$CIRCLE_TAG"
      - run: make docker-publish DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/timonwong
      - run: make docker-manifest DOCKER_IMAGE_TAG="$CIRCLE_TAG"
      - run: make docker-manifest DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/timonwong
      - run: |
          if [[ "$CIRCLE_TAG" =~ ^v[0-9]+(\.[0-9]+){2}$ ]]; then
            make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG"
            make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/timonwong
            make docker-publish DOCKER_IMAGE_TAG="latest"
            make docker-publish DOCKER_IMAGE_TAG="latest" DOCKER_REPO=quay.io/timonwong
            make docker-manifest DOCKER_IMAGE_TAG="latest"
            make docker-manifest DOCKER_IMAGE_TAG="latest" DOCKER_REPO=quay.io/timonwong
          fi

workflows:
  version: 2
  ding2wechat:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
      - docker_hub_master:
          context: timonwong-context
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - docker_hub_release_tags:
          context: timonwong-context
          requires:
            - test
            - build
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
            branches:
              ignore: /.*/
